name: Build and Publish

env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
  GITHUB_SHA: ${{ github.sha }}
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

on:
  push:
    branches: [ "master" ]

jobs:
  publish-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: main-sharder
            directory: sharder
            dockerfile: main.Dockerfile
          - package: http-gateway
            directory: http-gateway
            dockerfile: Dockerfile
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2.2.1

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image name
        run: |
          echo "IMAGE_NAME=${REGISTRY}/${GITHUB_REPOSITORY_OWNER,,}/${PACKAGE_NAME,,}:${GITHUB_SHA}" >> ${GITHUB_ENV}
        env:
          PACKAGE_NAME: ${{ matrix.package }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:${{ matrix.directory }}"
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.IMAGE_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Log image name
        run: |
          echo "Image URI: ${IMAGE_NAME}"